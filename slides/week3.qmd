---
title: "The Structure of a Program"
author: Ven Popov
format: 
  revealjs:
    theme: dark
    css: style.css
    footer: "FS25 Scientific Computing &nbsp; | &nbsp; Week 3"
    slide-number: true
    fig-responsive: true
resources:
  - assets
---

# Previously on...

---

## Recap

::: {layout="[1, 6]"}

Week 1: 

*Why Programming?* Course philosophy and the essence of computation

Week 2: 

*Computational Thinking* & Basic R Operations

:::

. . .

<br/> *[Short exercise:]{style="color:orange;"}* discuss core concepts for 5 minutes

. . .

<br/> *How did the pi assignment go?*

::: {.notes}
1. Programming as Problem-solving
2. The Two Essential components - data and functions
3. The process of 
:::

## Today {.smaller}
<br/>

|                       |                                               |
|-----------------------|-----------------------------------------------|
| The Big Picture       | What is a program and how do we structure it? |
| The Building Blocks   | *Data* versus *Functions*                         |
| The Environment       | Where do names live and who can access them?  |
| The Blueprint         | Code organization & the terminal^[*Did not have time for, we'll come back to this*]              |
| The Process           | How do we put all this together?              |
| Logistics             | Discuss feedback and overview of the rest of the course |

::: {.notes}
- you dipped your toes into telling a computer how to do something
- a traditional course might continue with specific tools
- we will look at the whole process of building software
- by software I mean everything - from a small script to a large application
:::

## Today (in a nutshell) 

::: {.v-center-container}
*Anything worth doing is worth doing well*
:::

# What is your first memory of interacting with a computer?

## {background-image="assets/pravetz-cropped.png"}

## {background-image="assets/pravetz.png" visibility="uncounted"}


---

:::: {.columns}

::: {.column width="50%"}
![](assets/welcome-to-logo.png)
:::

::: {.column width="50%"}
![](assets/logo-curves.png){.absolute .fragment top=10 left=550 width="500" height="370"}
:::

::::

# What is a program and how do we structure it?

## What is our goal? {.smaller}

::: incremental
- Programming is about solving-problems
  - analyze data
  - create a simulation
  - create a tablet app for an experiment
  - build predictive models
- We solve problems by breaking them up into pieces
- Solve the pieces
- Put them together
:::

## What we want != what the computer "wants" 

- it's all about abstraction
- we package low-level instructions into meaningful functions
- functions can be named, reused, tested and documented
- ok, but what is a function?

## Outlook: Rough list of topics to cover {.smaller}

:::: {.columns}

::: {.column}

- basic programming concepts
   - data structures
   - control statements - if, while, loops
   - functions
   - objects
   - scope
   - algorithms
   - randomness, seeds, distributions
   - tips & tricks
   - problem-solving
:::

::: {.column}

- filesystem, project organization & command line tools
- version control & collaboration
- dependency/environment management & cluster/cloud computing
- profiling, optimization and debugging
- testing, documentation & reporting
- (maybe: useful math refresher)

:::

::::
